{"file":"calculator-base.entry.esm.js","mappings":";;AAAA,MAAM,iBAAiB,GAAG,wyBAAwyB;;MCQrzB,cAAc;;;QAGjB,YAAO,GAAe,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAA;4BAFtF,GAAG;uBACN,EAAE;;IAG/B,iBAAiB,CAAC,KAAa;QAC7B,KAAK,GAAG,KAAK,KAAK,GAAG,GAAG,GAAG,GAAG,KAAK,CAAA;QAEnC,IAAI,KAAK,KAAK,GAAG,EAAE;YACjB,IAAI;gBACF,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAA;gBACtC,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC3B,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAA;iBACrB;gBACD,IAAI,CAAC,OAAO,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,YAAY,IAAI,MAAM,EAAE,CAAC,CAAA;gBAElE,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAA;aACtC;YAAC,OAAO,KAAK,EAAE;gBACd,IAAI,CAAC,YAAY,GAAG,OAAO,CAAA;aAC5B;SACF;aAAM,IAAI,KAAK,KAAK,GAAG,EAAE;YACxB,IAAI,CAAC,YAAY,GAAG,GAAG,CAAA;YACvB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAA;SAClB;aAAM;YACL,IAAI,IAAI,CAAC,YAAY,KAAK,GAAG,IAAI,IAAI,CAAC,YAAY,KAAK,OAAO,EAAE;gBAC9D,IAAI,CAAC,YAAY,GAAG,KAAK,CAAA;aAC1B;iBAAM;gBACL,IAAI,CAAC,YAAY,IAAI,KAAK,CAAA;aAC3B;SACF;KACF;IAED,MAAM;QACJ,QACE,4DAAK,KAAK,EAAC,YAAY,IACrB,4DAAK,KAAK,EAAC,gBAAgB,IACzB,4DAAK,KAAK,EAAC,oBAAoB,IAC7B,4DAAK,KAAK,EAAC,4BAA4B,IACpC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,KAAK,WAAK,KAAK,EAAC,gBAAgB,EAAC,GAAG,EAAE,KAAK,IAAG,IAAI,CAAO,CAAC,CACpF,EACN,2EAAoB,KAAK,EAAC,2BAA2B,EAAC,YAAY,EAAE,IAAI,CAAC,YAAY,GAAI,CACrF,EACN,0EAAmB,KAAK,EAAE,cAAc,EAAE,KAAK,EAAC,GAAG,EAAC,aAAa,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,MAAM,CAAC,GAAI,CAC1G,EACN,4DAAK,KAAK,EAAC,UAAU,IAClB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,IAAI,WAAK,KAAK,EAAC,oBAAoB,IACxD,MAAM,CAAC,GAAG,CAAC,GAAG,IAAI,yBAAmB,KAAK,EAAE,GAAG,EAAE,aAAa,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,MAAM,CAAC,GAAI,CAAC,CACzG,CAAC,CACH,CACF,EACP;KACF;;;;;;","names":[],"sources":["src/components/calculator-base/calculator-base.css?tag=calculator-base","src/components/calculator-base/calculator-base.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n\n.calculator {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 300px;\n  margin: auto;\n  padding: 20px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n  gap: 24px;\n  background-color: #fff9c7;\n}\n\n.calculator-top {\n  display: flex;\n  width: 100%;\n  gap: 16px;\n  align-items: end;\n}\n\n.calculator-display {\n  width: 100%;\n  height: 100px;\n  background-color: #422800;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  align-items: end;\n  justify-content: end;\n  padding: 8px 16px;\n  box-sizing: border-box;\n  border-radius: 12px;\n}\n\n.calculator-display-history {\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  width: 100%;\n}\n\n.history-number {\n  color: beige;\n  font-family: monospace;\n}\n\n.calculator-buttons {\n  display: flex;\n  flex-direction: column;\n  width: 33.33%;\n  gap: 8px;\n}\n\n.keyboard {\n  display: flex;\n  width: 100%;\n  width: 100%;\n  gap: 8px;\n}\n\n.button-erase {\n  width: 100px;\n}","import { Component, h, State } from '@stencil/core'\n\n@Component({\n  tag: 'calculator-base',\n  styleUrl: 'calculator-base.css',\n  shadow: false,\n})\n\nexport class CalculatorBase {\n  @State() displayValue: string = '0'\n  @State() history: string[] = []\n  private buttons: string[][] = [['1', '4', '7', '0'], ['2', '5', '8', '.'], ['3', '6', '9', '='], ['-', '+', '/', 'x']]\n\n  handleButtonClick(value: string) {\n    value = value === 'x' ? '*' : value\n\n    if (value === '=') {\n      try {\n        const result = eval(this.displayValue)\n        if (this.history.length > 1) {\n          this.history.shift()\n        }\n        this.history = [...this.history, `${this.displayValue}=${result}`]\n\n        this.displayValue = result.toString()\n      } catch (error) {\n        this.displayValue = 'Error'\n      }\n    } else if (value === 'C') {\n      this.displayValue = '0'\n      this.history = []\n    } else {\n      if (this.displayValue === '0' || this.displayValue === 'Error') {\n        this.displayValue = value\n      } else {\n        this.displayValue += value\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div class=\"calculator\">\n        <div class='calculator-top'>\n          <div class=\"calculator-display\">\n            <div class=\"calculator-display-history\">\n              {this.history.map((item, index) => <div class='history-number' key={index}>{item}</div>)}\n            </div>\n            <calculator-display class=\"calculator-display-screen\" displayValue={this.displayValue} />\n          </div>\n          <calculator-button class={'button-erase'} value=\"C\" onButtonClick={(e) => this.handleButtonClick(e.detail)} />\n        </div>\n        <div class=\"keyboard\">\n          {this.buttons.map(column => <div class=\"calculator-buttons\">\n            {column.map(num => <calculator-button value={num} onButtonClick={(e) => this.handleButtonClick(e.detail)} />)}\n          </div>)}\n        </div>\n      </div>\n    )\n  }\n}\n"],"version":3}