/**
   * @license
   * author: Richard Shephard
   * stencil-tailwind-plugin.js v1.8.0
   * Released under the MIT license.
   */
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var n=require("path"),t=require("fs-extra"),e=require("chalk"),i=require("p-queue"),r=require("typescript"),s=require("postcss"),a=require("autoprefixer"),o=require("tailwindcss/lib/processTailwindFeatures"),c=require("tailwindcss/lib/public/resolve-config"),u=require("postcss-load-config"),l=require("cssnano"),f=require("postcss-combine-duplicated-selectors"),d=require("postcss-discard-comments");function p(n){return n&&"object"==typeof n&&"default"in n?n:{default:n}}var g=p(n),m=p(t),y=p(e),x=p(i),w=p(r),S=p(s),b=p(a),h=p(o),K=p(c),O=p(u),T=p(l),C=p(f),E=p(d);let P=!1;function v(...n){P&&console.log(y.default.bold.blue("[DBG]"),...n)}function j(...n){console.log(y.default.bold.bgRedBright("[ERR]"),y.default.bold.red(...n))}const F={DEFAULT:{enableDebug:!1,tailwindCssPath:void 0,tailwindCssContents:"@tailwind base;@tailwind utilities;@tailwind components;",tailwindConf:{content:[],theme:{extend:{}},plugins:[]},stripComments:!1,minify:!0,useAutoPrefixer:!0}};function R(n){const t=m.default.readFileSync(g.default.resolve(n)).toString();return 0===t.length?(function(...n){console.log(y.default.bold.yellowBright("[WRN]"),...n)}("No css found when reading Tailwind configuration css - path",n),null):t}function q(n){var t;const e=Object.assign({},n);if(e.tailwindCssPath&&(e.tailwindCssContents=null!==(t=R(e.tailwindCssPath))&&void 0!==t?t:e.tailwindCssContents),"function"!=typeof e.tailwindConf){const n=e.tailwindConf;e.tailwindConf=function(n){return(t,e)=>{var i;const r=e.corePlugins.preflight;let s=r;return Array.isArray(n.corePlugins)?Object.assign(Object.assign(Object.assign({},n),e),{corePlugins:[]}):(r&&n.corePlugins&&(s=null===(i=n.corePlugins.preflight)||void 0===i||i),Object.assign(Object.assign({},n),{content:e.content,corePlugins:Object.assign(Object.assign({},n.corePlugins),{preflight:s})}))}}(n)}return e}function D(n){return w.default.createSourceFile("placeholder.ts",n,r.ScriptTarget.Latest)}function A(n){return function(t,e){const i=n[e];if(i&&t.kind===i.nodeKind){if(i.has){if(!t.modifiers)return!1;let n=!1;for(let e=0;e<t.modifiers.length;++e)if(t.modifiers[e].kind===i.has){n=!0;break}if(!n)return!1}return i.name?t.name&&t.name.escapedText===i.name:!i.initializerKind||t.initializer&&t.initializer.kind===i.initializerKind}return!1}}function k(n,t){const e=A(t);let i=0;return function n(r){return e(r,i)&&(i++,i===t.length)?r:w.default.forEachChild(r,n)}(n)}function z(n,{name:t,modifier:e,initializer:i}={}){return{nodeKind:n,name:t,has:e,initializerKind:i}}function $(n,t){let e=0;const i=A(n);return function(s){function a(o){return v("[Typescript]","Visiting "+r.SyntaxKind[o.kind]),i(o,e)?(e++,e===n.length?t(o):(v("[Typescript]","Moving to next tree level",e,"looking for",r.SyntaxKind[n[e].nodeKind]),o=w.default.visitEachChild(o,a,s))):o}return function(n){return w.default.visitNode(n,a)}}}function L(n,t){return n.findIndex((n=>"function"==typeof n&&n.name===t||"object"==typeof n&&null!==n&&(n.postcssPlugin===t||n.name===t)))}function V(){return E.default({removeAll:!0})}function N(){return[C.default(),T.default()]}async function B(n){const t=await async function(n){const t={plugins:[]};let e="";if("object"==typeof n&&!Array.isArray(n)&&null!==n&&Array.isArray(n.plugins))return n.plugins;("string"==typeof n||n instanceof String)&&(e=n);try{return(await O.default(t,e)).plugins}catch(t){if("MODULE_NOT_FOUND"===t.code)throw new Error(`'stencil-tailwind-plugin' is not able to resolve modules required from configuration files. Make sure it is installed\nError: ${t.message}`);v("[TW]","No postcss configuration file found in:",n)}return[]}(n.postcss),e=L(t,"tailwindcss"),i=-1!==L(t,"autoprefixer");return{before:-1===e?[]:t.slice(0,e),after:-1===e?t:t.slice(e+1),hasAutoPrefixer:i}}async function I(n,t,e,i){const r=function(n,t,e){return n(t[0],{content:t,corePlugins:{preflight:e}})}(n.tailwindConf,[t],i),{before:s,after:a,hasAutoPrefixer:o}=await B(n),c=[...s,function(n,t){const e=()=>({postcssPlugin:"tailwindcss",Once(e,{result:i}){h.default((({createContext:e})=>()=>e(K.default(n),[t])))(e,i)}});return e.postcss=!0,e}(r,{content:e,extension:"tsx"}),...a];return n.useAutoPrefixer&&!o&&c.push(b.default()),n.minify&&c.push(...N()),n.stripComments&&c.push(V()),c}async function M(n,t,e,i,r){const s=`${n.tailwindCssContents} ${null!=r?r:""}`,a=await I(n,e,i,t),o=function(n,t){return t?n:n.replace(/\n/g,"").replace(/'/g,'"').replace(/`/g,"\\`").replace(/\t/g," ")}((await S.default(a).process(s,{from:e})).css,n.minify);return v("[TW]","Tailwind styles:",o),o}function U(n,t,e,i){return M(n,!1,t,e,i)}function _(n,t,e,i){return M(n,!0,t,e,i)}async function G(n,t,e,i){const{minify:r,stripComments:s}=n,a=e+i;if(!r||0===i.length)return a;const o=g.default.join(".",g.default.relative(process.cwd(),t)),c=N();s&&c.push(V());return(await S.default(c).process(a,{from:o})).css}const W=[];function H(n){return n.replace(/\\/g,"/")}function J(n){const t=g.default.parse(n);return H(g.default.join(t.dir,t.name))}function Q(n,t){const e=H(n),i=t.map(J),r=function(n){return W.find((t=>t.name===n))}(e);if(void 0===r)return v("[STORE]","Registered",i,"with",e),void W.push(function(n,t){return{imports:t,cssFiles:{},name:n}}(e,i));v("[STORE]","Updated",i,"with",e),r.imports.push(...i)}function X(n,t){const e=H(n);v("[STORE]","Registering css for",e,"against",t);const i=function(n){const t=J(n);return function(e){return-1!==e.imports.indexOf(t)||e.name===n}}(e);W.forEach((n=>{i(n)&&(v("[STORE]","Found cross reference for imported file",n.name,"to store css against"),n.cssFiles[e]={name:e,css:t})}))}function Y(n){const t=H(n);v("[STORE]","Looking up import of",t);const e=function(n){const t=J(n);return v("[STORE]","Import spec for matching",t),W.filter((n=>n.imports.includes(t)))}(t).reduce(((n,t)=>(n.css+=Object.entries(t.cssFiles).reduce(((t,[e,i])=>(t+=i.css,n.dependencies.push(i.name),t)),""),n)),{css:"",dependencies:[]});return v("[STORE]","Injecting css",e),e}function Z(n){return async(t,e)=>{v("[Stylesheets]","Processing css from tsx source file:",e);const i=D(t),s=await async function(n,t,e,i){const s=[z(r.SyntaxKind.SourceFile),z(r.SyntaxKind.FirstStatement),z(r.SyntaxKind.VariableDeclarationList),z(r.SyntaxKind.VariableDeclaration),z(r.SyntaxKind.StringLiteral)],a=Y(i).css,o=k(t,s);return await(async t=>{const r=t.text,s=await _(n,i,e,r),o=await G(n,i,s,a);t.text=o})(o),w.default.createPrinter().printFile(t)}(n,i,t,e);return s}}function nn(){return[z(r.SyntaxKind.SourceFile),z(r.SyntaxKind.VariableStatement),z(r.SyntaxKind.VariableDeclarationList),z(r.SyntaxKind.VariableDeclaration,{initializer:r.SyntaxKind.ClassExpression})]}function tn(n,t){const e=nn();let i="";const s=function(n,t,e){let i=!1;const r=w.default.transform(n,[$(t,(function(n){return v("Found Node, calling user processing"),i=!0,e(n)}))]),[s]=r.transformed,a=w.default.createPrinter();return{found:i,fullText:a.printFile(s)}}(n,e,(n=>{const t=n;return t.name&&t.initializer&&t.initializer.kind===r.SyntaxKind.ClassExpression&&(i=t.name.escapedText),n}));if(s.found){const n=w.default.factory.createIdentifier(`'${t}'`);s.fullText=`${s.fullText}${i}.style = ${n.escapedText};\n`}return s}function en(n,t){const e=g.default.parse(t),i=[];!function(n,t,e){(function n(i){return i.kind===t&&e(i)?i:w.default.forEachChild(i,n)})(n)}(n,r.SyntaxKind.ImportDeclaration,(function(n){const t=n.moduleSpecifier,r=g.default.resolve(e.dir,t.text);return i.push(r),!1})),Q(t,i)}function rn(n){return!function(n){return void 0!==k(n,[z(r.SyntaxKind.SourceFile),z(r.SyntaxKind.VariableStatement,{modifier:r.SyntaxKind.ExportKeyword}),z(r.SyntaxKind.VariableDeclarationList),z(r.SyntaxKind.VariableDeclaration),z(r.SyntaxKind.ClassExpression),z(r.SyntaxKind.GetAccessor,{name:"style",modifier:r.SyntaxKind.StaticKeyword}),z(r.SyntaxKind.Block),z(r.SyntaxKind.ReturnStatement)])}(n)&&!function(n){return void 0!==k(n,[z(r.SyntaxKind.SourceFile),z(r.SyntaxKind.ExpressionStatement),z(r.SyntaxKind.BinaryExpression)])}(n)}function sn(n){return async(t,e)=>{v("[Typescript]","Processing source file:",e);const i=D(t),r=rn(i),s=r&&function(n){return void 0!==k(n,nn())}(i)?_:U,a=await s(n,e,t);if(0===a.length)return t;const o=a.replace(/\\/g,"\\\\");if(en(i,e),r){const n=function(n,t){const e=tn(n,t);return{text:e.fullText,transformed:e.found}}(i,o);if(n.transformed)return n.text}return X(e,a),t}}function an(){v("Starting build")}function on(n){n&&(j("Oh noes! Something went wrong!",n.message),j(n.stack)),v("Build completed")}const cn=new x.default({concurrency:1});function un(n){const t=sn(n),e=Z(n);return async(n,i)=>await cn.add((async()=>{let r=n;return i.match(/\.s?(a|c)ss$/)?r=await e(n,i):function(n){return n.match(/\.tsx/)}(i)&&(r=await t(n,i)),{code:r,map:null}}))}function ln(n){const t=function(n){return async(t,e)=>{v("[Stylesheets]","Processing css source file:",e);const i=Y(e).css,r=await _(n,e,t,t);return await G(n,e,r,i)}}(n);return async(n,e)=>await cn.add((async()=>{const i=Y(e);return{code:await t(n,e),map:null,dependencies:i.dependencies}}))}function fn(n){return async(t,e,i)=>{if(!i.config.globalStyle)return{code:t,map:null};const r=g.default.parse(i.config.globalStyle),s=new RegExp(`${r.dir}.${r.name}.s?(a|c)ss`);return e.match(s)?await cn.add((async()=>({code:await _(n,e,t,t),map:null,dependencies:[i.config.globalStyle,e]}))):{code:t,map:null}}}const dn=Object.freeze(F);let pn=dn.DEFAULT;function gn(n){const t=Object.assign(Object.assign({},pn),n),e=q(t);var i;return i=t.enableDebug,P=i,e}exports.PluginOpts=dn,exports.default=function(n){return{name:"tailwind",transform:un(gn(n)),buildStart:an,buildEnd:on}},exports.setPluginConfigurationDefaults=function(n){return pn=Object.assign(Object.assign({},pn),n),pn},exports.tailwindGlobal=function(n){return{pluginType:"css",name:"tailwind-global",transform:fn(gn(n)),buildStart:an,buildEnd:on}},exports.tailwindHMR=function(n){return{pluginType:"css",name:"tailwind-hmr",transform:ln(gn(n)),buildStart:an,buildEnd:on}};
//# sourceMappingURL=index.js.map
